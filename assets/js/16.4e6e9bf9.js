(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{236:function(e,r,a){"use strict";a.r(r);var n=a(0),t=Object(n.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threads"}},[e._v("#")]),e._v(" Threads")]),e._v(" "),a("h2",{attrs:{id:"kenmerken-van-een-proces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kenmerken-van-een-proces"}},[e._v("#")]),e._v(" Kenmerken van een proces")]),e._v(" "),a("ul",[a("li",[e._v("Proces\n"),a("ul",[a("li",[e._v("Het "),a("em",[e._v("bezit bronnen")]),e._v(" (virtueel geheugen, file handles)")])])]),e._v(" "),a("li",[e._v("Thread\n"),a("ul",[a("li",[e._v("Het wordt uitgevoerd volgens "),a("em",[e._v("een bepaald pad")]),e._v(" in een uitvoeringstoestand (actief, gereed, geblokkeerd) met een bepaalde prioriteit")])])]),e._v(" "),a("li",[e._v("Deze twee karakteristieken kunnen onafhankelijk door het besturingssysteem worden behandeld.")])]),e._v(" "),a("h2",{attrs:{id:"threads-and-processen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threads-and-processen"}},[e._v("#")]),e._v(" Threads and Processen")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/nISL1L5.png",alt:""}})]),e._v(" "),a("p",[e._v("Een proces een thread  ðŸ¡º MSDOS")]),e._v(" "),a("p",[e._v("Meerdere processen, een thread per proces ðŸ¡º Oorspronkelijk Unix")]),e._v(" "),a("p",[e._v("Een proces, meerdere threads per proces ðŸ¡º Java engine")]),e._v(" "),a("p",[e._v("Meerdere processen meerdere threads per proces ðŸ¡º Windows NT, Solaris en Linux")]),e._v(" "),a("p",[e._v("Een thread kan worden gezien als een onafhankelijke programmateller binnen een proces.")]),e._v(" "),a("h2",{attrs:{id:"single-threaded-and-multithreaded-process-models"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#single-threaded-and-multithreaded-process-models"}},[e._v("#")]),e._v(" Single Threaded and Multithreaded Process Models")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/c0k05df.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"voordelen-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voordelen-threads"}},[e._v("#")]),e._v(" Voordelen threads:")]),e._v(" "),a("ul",[a("li",[e._v("Het creÃ«ren van een thread kost veel minder tijd dan het creÃ«ren van een proces.\n-Hetzelfde geld voor het overschakelen van een proces.")]),e._v(" "),a("li",[e._v("Omdat threads hetzelfde geheugen en I/O delen kunnen zij met elkaar communiceren zonder tussenkomst van de kernel.\nDenk aan servers. Voor elke aanvraag een nieuwe thread.\nWanneer een proces opgeschort wordt worden alle threads van dat proces opgeschort.")])]),e._v(" "),a("h3",{attrs:{id:"user-level-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user-level-threads"}},[e._v("#")]),e._v(" User-Level Threads")]),e._v(" "),a("ul",[a("li",[e._v("Threadmanagement door de applicatie")]),e._v(" "),a("li",[e._v("Kernel weet niet van de threads  geen kernel privileges")]),e._v(" "),a("li",[e._v("Scheduling is aplicatie specifiek.")])]),e._v(" "),a("h3",{attrs:{id:"kernel-level-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kernel-level-threads"}},[e._v("#")]),e._v(" Kernel-level threads")]),e._v(" "),a("ul",[a("li",[e._v("Windows NT en OS/2 zijn voorbeelden van deze aanpak")]),e._v(" "),a("li",[e._v("De kernel bestuurt de context informatie van de processen en de threads")]),e._v(" "),a("li",[e._v("Het overschakelen van de threads wordt bestuurt door de kernel.\nGecombineerde benadering wordt gedaan door Solaris. Create in user space\nDe meeste scheduling en synchronisatie wordt ook in de userspace gedaan.")])]),e._v(" "),a("h2",{attrs:{id:"blokkeren-van-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blokkeren-van-threads"}},[e._v("#")]),e._v(" Blokkeren van threads")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/D6VCbNF.png",alt:""}})]),e._v(" "),a("p",[e._v("Bij het bovenste plaatje in de figuur wordt 2 x een Remote procedure call aan geroepen naar verschillende machines.\nHetzelfde gebeurd in het onderste deel, maar daar zijn 2 threads opgestart.\nDe tweede methode is beter, tenzij door een I/O aanvraag het gehele proces opgeschort wordt.(zie volgende plaatje).")]),e._v(" "),a("h3",{attrs:{id:"voorbeelden-gebruik-meerdere-threads"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#voorbeelden-gebruik-meerdere-threads"}},[e._v("#")]),e._v(" Voorbeelden gebruik meerdere threads:")]),e._v(" "),a("ul",[a("li",[e._v("Asynchrone verwerking:\n"),a("ul",[a("li",[e._v("File, html-server")])])]),e._v(" "),a("li",[e._v("Werk op voor of achtergrond: spreadsheet berekeningen, uitvoer van gegevens naar scherm, lezen van gegevens")]),e._v(" "),a("li",[e._v("Uitvoeringssnelheid:\n"),a("ul",[a("li",[e._v("Benaderen van verschillende bronnen")])])]),e._v(" "),a("li",[e._v("Structuur van programmaâ€™s")])]),e._v(" "),a("h2",{attrs:{id:"multithreading-in-een-uniprocessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multithreading-in-een-uniprocessor"}},[e._v("#")]),e._v(" Multithreading in een uniprocessor")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/gm96LVn.png",alt:""}})]),e._v(" "),a("p",[e._v("Voorbeeld 2 processors.\nProces 1 heeft 2 threads\nProces 2 heeft 1 thread\nEr moet synchronisatie plaats vinden tussen thread A en B\nScheduling van threads binnen proces.")]),e._v(" "),a("h2",{attrs:{id:"waarom-multithreading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#waarom-multithreading"}},[e._v("#")]),e._v(" Waarom multithreading")]),e._v(" "),a("ul",[a("li",[e._v("Uitvoeren van â€˜achtergrondtakenâ€™ binnen applicatie\n"),a("ul",[a("li",[e._v("Bijvoorbeeld spellingscheck binnen tekstverwerker")]),e._v(" "),a("li",[e._v("Applicatie â€˜lijktâ€™ sneller want gebruiker kan doorwerken tijdens check")]),e._v(" "),a("li",[e._v("GUI blijft reageren !")])])]),e._v(" "),a("li",[e._v("Snellere uitvoer van een programma\n"),a("ul",[a("li",[e._v("Bij multicore kunnen programmaâ€™s meerdere dingen tegelijkertijd doen")]),e._v(" "),a("li",[e._v("Bij singlecore kan programma andere dingen doen indien de â€˜hoofdthreadâ€™ geblokkeerd raakt.")])])])]),e._v(" "),a("h2",{attrs:{id:"threads-op-gebruikers-en-kernel-niveau"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threads-op-gebruikers-en-kernel-niveau"}},[e._v("#")]),e._v(" Threads op gebruikers- en kernel-niveau")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/wHgOqc0.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"thread-op-gebruikersniveau-in-plaats-van-op-kernelniveau-hebben-enkele-voordelen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#thread-op-gebruikersniveau-in-plaats-van-op-kernelniveau-hebben-enkele-voordelen"}},[e._v("#")]),e._v(" Thread op gebruikersniveau in plaats van op kernelniveau hebben enkele voordelen:")]),e._v(" "),a("ol",[a("li",[e._v("Threadwisseling vereist geen priveleges, dit bespaart overhead van twee moduswisselingen.")]),e._v(" "),a("li",[e._v("De scheduling kan specifiek voor een toepassing gelden.")]),e._v(" "),a("li",[e._v("De thread kunnen worden uitgevoerd op elk os.")]),e._v(" "),a("li",[e._v("Voorbeeld Java engine")])]),e._v(" "),a("h4",{attrs:{id:"nadelen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nadelen"}},[e._v("#")]),e._v(" Nadelen:")]),e._v(" "),a("ol",[a("li",[e._v("Systeem-aanroepen leiden tot blokkering: alle threads worden geblokkeerd.")]),e._v(" "),a("li",[e._v("Kan geen gebruik maken van multiprocessing. Elke processor een proces!")])]),e._v(" "),a("h3",{attrs:{id:"threads-op-kernel-niveau"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#threads-op-kernel-niveau"}},[e._v("#")]),e._v(" Threads op kernel niveau")]),e._v(" "),a("p",[e._v("Het toepassingsprogramma bevat een API Application Program Interface die gekoppeld is aan de thread-voorziening van de kernel (NT en OS2)")]),e._v(" "),a("h4",{attrs:{id:"nadeel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nadeel"}},[e._v("#")]),e._v(" Nadeel:")]),e._v(" "),a("ol",[a("li",[e._v("Moduswisseling naar de kernel")])]),e._v(" "),a("h2",{attrs:{id:"hyper-threading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyper-threading"}},[e._v("#")]),e._v(" Hyper Threading")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/47CpDcd.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"core-block-diagram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#core-block-diagram"}},[e._v("#")]),e._v(" Core Block Diagram")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/3dItxaK.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"risico-van-parallelisme"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#risico-van-parallelisme"}},[e._v("#")]),e._v(" Risico van parallelisme")]),e._v(" "),a("h2",{attrs:{id:"multithreaded-kruispunt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multithreaded-kruispunt"}},[e._v("#")]),e._v(" Multithreaded kruispunt")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.imgur.com/WYNDs95.png",alt:""}})]),e._v(" "),a("p",[e._v("Meer hier over in het volgende hoofdstuk")])])}),[],!1,null,null,null);r.default=t.exports}}]);